name: Build and Release Executable

on:
  push:
    branches:
      - main  # oder der Branch, den du überwachen möchtest
  workflow_dispatch: # ermöglicht manuelles Triggern

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt  # Installiere Abhängigkeiten aus deiner requirements.txt

    - name: Build executable with PyInstaller
      run: pyinstaller --onefile news-proxy.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: executable
        path: dist/news-proxy.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: executable

    - name: List downloaded files
      run: ls -R  # Listet alle heruntergeladenen Dateien und Verzeichnisse auf, um die Datei zu lokalisieren.

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./news-proxy.exe
        asset_name: news-proxy.exe
        asset_content_type: application/octet-stream

