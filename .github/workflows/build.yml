name: Build and Release Executable

on:
  push:
    branches:
      - main  # or the branch you want to monitor
  workflow_dispatch: # allows manual triggering

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt  # Install dependencies from requirements.txt

    - name: Build executable with PyInstaller
      run: pyinstaller --onefile news-proxy.py

    - name: Install pandoc
      run: choco install pandoc -y # Chocolatey installs pandoc on Windows runner

    - name: Convert README.md to README2.txt
      run: pandoc README.md -o README2.txt

    - name: Add note to README.txt
      run: |
        echo "Note: For the most readable version of these instructions, please view the Markdown version of this file" > README.txt
        echo "directly on GitHub at https://github.com/disaster123/ea-news-proxy/blob/main/README.md." >> README.txt
        echo "" >> README.txt
        echo "" >> README.txt
        type README2.txt >> README.txt
      shell: pwsh

    - name: Prepare release artifacts
      run: |
        mkdir release
        copy dist\news-proxy.exe release\news-proxy.exe
        copy README.txt release\README.txt
        copy start-in-loop.bat release\start-in-loop.bat
        cd release
        powershell Compress-Archive -Path * -DestinationPath ../news-proxy-release.zip
        cd ..

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-archive
        path: news-proxy-release.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: release-archive

    - name: List downloaded files
      run: ls -R  # Lists all downloaded files and directories to locate the file

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./news-proxy-release.zip
        asset_name: news-proxy-release.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
